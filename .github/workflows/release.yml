name: Build and Release

on:
  push:
    branches:
      - main
  schedule:
    # Every day 1 on every month at 00:00 UTC
    - cron: '0 0 1 * *'

jobs:

  prepare:

    runs-on: ubuntu-latest
    outputs:
      hasnew: ${{ steps.main.outputs.hasnew }}
      tag: ${{ steps.main.outputs.tag }}
      name: ${{ steps.main.outputs.name }}

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install .
    - name: Run Python script
      id: main
      run: python main.py

  build:

    needs: [prepare]
    if: needs.prepare.outputs.hasnew == 'true'

    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        label:
          - x86_64-pc-windows-msvc-portable
        include:
          - label: x86_64-pc-windows-msvc-portable
            target: x86_64-pc-windows-msvc
            bins: --bin juliaup --bin julia
            os: windows
            toolchain: stable
    outputs:
      tag: ${{ needs.prepare.outputs.tag }}
      name: ${{ needs.prepare.outputs.name }}

    steps:

    - name: Clone juliaup repo
      run: |
        git clone https://github.com/JuliaLang/juliaup

    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        target: ${{ matrix.target }}

    - name: Release build
      # Here was an action: clechasseur/rs-cargo
      run: |
        cd juliaup
        git checkout ${{ needs.prepare.outputs.tag }}
        cargo build --release ${{ matrix.bins }} --target ${{ matrix.target }}

    - uses: actions/upload-artifact@v4
      # NOTICE! I do not know how to set the working directory in a step.
      # If use `run` instead of `uses actions/*`, can use `cd xxx`.
      # Here use the `juliaup` prefix.
      with:
        name: ${{ matrix.label }}
        path: |
          juliaup/target/${{ matrix.target }}/release/juliaup.exe
          juliaup/target/${{ matrix.target }}/release/julia.exe
        # working-directory: juliaup

  package-portable:

    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ needs.build.outputs.tag }}
      name: ${{ needs.build.outputs.name }}

    steps:

    - name: Download x86_64-pc-windows-msvc-portable artifact
      uses: actions/download-artifact@v4
      with:
        name: x86_64-pc-windows-msvc-portable
        path: bins

    - name: Create archives
      run: |
        # tree
        mkdir public
        cd bins
        zip -r ../public/juliaup-${{ needs.build.outputs.tag }}-x86_64-pc-windows-msvc-portable.zip .
        cd ..

    - uses: actions/upload-artifact@v4
      with:
        name: portable
        path: public/*.*

  deploy-github-release-binaries:

    needs: [package-portable]
    runs-on: ubuntu-latest
    steps:

    - uses: actions/download-artifact@v4
      with:
        name: portable
        path: public

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "public/*.*"
        allowUpdates: true
        prerelease: false
        tag: ${{ needs.package-portable.outputs.tag }}
        name: ${{ needs.package-portable.outputs.name }}
